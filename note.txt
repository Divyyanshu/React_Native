Day 2

import React, { useRef, useEffect } from 'react';
import { Animated, Text, View } from 'react-native';
import { StyleSheet } from 'react-native';
import { StatusBar } from 'expo-status-bar';

export default function App() {
  // Create an animated value for the airplane's horizontal position
  const airplanePosition = useRef(new Animated.Value(-200)).current;

  useEffect(() => {
    // Start the animation
    Animated.loop(
      Animated.sequence([
        Animated.timing(airplanePosition, {
          toValue: 400, // Final horizontal position
          duration: 4000, // Duration of the animation (in milliseconds)
          useNativeDriver: true, // Optimize performance with native driver
        }),
        Animated.timing(airplanePosition, {
          toValue: -200, // Reset to initial position
          duration: 0, // Instantly reset
          useNativeDriver: true,
        }),
      ])
    ).start();
  }, [airplanePosition]);

  return (
    <View style={styles.container}>
      {/* Animating the airplane icon */}
      <Animated.Text
        style={[
          styles.locationtext,
          { transform: [{ translateX: airplanePosition }] },
        ]}
      >
        ᯓ ✈︎
      </Animated.Text>
      <StatusBar />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'black',
    alignItems: 'center',
    justifyContent: 'center',
  },
  locationtext: {
    fontSize: 100,
    fontWeight: '900',
    margin: 10,
    color: 'white',
  },
});




---------------------------------------------------------------------------------------
daksh splash screen code

import React from 'react';
import { View, Image } from 'react-native';
import { StyleSheet } from 'react-native';

export default function App() {
  return (
    <View style={styles.container}>
      <Image source={require('./assets/logo_splash_daksh.png')} style={styles.logo} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F26B35',
    alignItems: 'center',
    justifyContent: 'center',
  },
  locationtext: {
    fontSize: 50,
    fontWeight: '900',
    margin: 10,
    color: 'white',
  },
  logo: {
    width: 200, // Logo width
    height: 200, // Logo height
    resizeMode: 'contain', // Adjust the logo to fit within the container
  },
});



---------------------------------------------------------------------------------------------------
DAY 2

import { Button, StyleSheet, Text, TextInput, View } from 'react-native'
import React from 'react'

const App = () => {
  return (
    <View style={styles.appContainer}>
      <View style={styles.inputContainer} >
        <TextInput placeholder='Enter your Goals' style={styles.TextInout} />
        <Button title='Add Goal' style={styles.button} />
      </View>
      <View>
        <Text>List OF Goals...!</Text>
      </View>
    </View>
  )
}

export default App

const styles = StyleSheet.create({
  appContainer: {
    padding: 50,
    flex: 1,
    justifyContent: "center",
    alignContent: "center"
  },
  inputContainer: {
    flexDirection : "row",
    justifyContent : "space-around",
    borderColor : "#cccccc"
  },
  TextInout: {
    padding:10,
    paddingRight:20,
    borderWidth: 1,
    width : '80%',
    marginRight: "10"
  }
})

----------------------------------------------------------------------------------------------------
Day 3

import { StyleSheet, Text, View } from "react-native";
import React from "react";

const App = () => {
  return (
    <View
      style={{
        padding: "50",
        flexDirection: "row",
        justifyContent: "space-between",
        alignItems : "center",
        gap: 18,
        width: "200",
        height: 300,
      }}
    >
      <View style={styles.textContainer1}>
        <Text>1</Text>
      </View>
      <View style={styles.textContainer2}>
        <Text>2</Text>
      </View>
      <View style={styles.textContainer3}>
        <Text>3</Text>
      </View>
    </View>
  );
};

export default App;

const styles = StyleSheet.create({
  textContainer1: {
    backgroundColor: "red",
    flex:1,
    // width: 200,
    // height: 200,
    justifyContent: "center",
    alignItems: "center",
  },
  textContainer2: {
    backgroundColor: "green",
    flex:1,
    // width: 200,
    // height: 200,
    justifyContent: "center",
    alignItems: "center",
  },
  textContainer3: {
    backgroundColor: "blue",
    // width: 200,
    // height: 200,
    justifyContent: "center",
    flex:1,
    alignItems: "center",
  },
});
   
----------------------------------------------------------------------------------------------------


import React, { useState } from "react";
import {
  Button,
  StyleSheet,
  Text,
  TextInput,
  View,
  FlatList,
} from "react-native";
import { SafeAreaProvider, SafeAreaView } from "react-native-safe-area-context";

const App = () => {
  const [enterGoalsText, setEnterGoalText] = useState("");
  const [listDatas, setListData] = useState([]);
  function handleChange(enterText) {
    setEnterGoalText(enterText);
    console.log(enterText);
  }
  // list showing
  function handleClick() {
    setListData((CurrentlistData) => [...CurrentlistData, enterGoalsText]);
    console.log(enterGoalsText);
  }
  return (
    <SafeAreaProvider>
      <SafeAreaView style={styles.container}>
        <View style={styles.appContainer}>
          <Text
            style={{
              fontSize: 35,
              margin: "auto",
              paddingBottom: 50,
              fontWeight: 900,
              color: "#441752",
            }}
          >
            To-Do App
          </Text>
          <View style={styles.inputContainer}>
            <TextInput
              placeholder="Enter your Goals"
              style={styles.TextInput}
              onChangeText={handleChange}
            />
            <Button title="Add Goal" color={"#441752"} onPress={handleClick} />
          </View>
          <View>
            <View style={styles.goalContainer}>
              {/* using flat list the alternative of scrollview and map() function key pair  */}
              <FlatList
                data={listDatas}
                renderItem={(itemData) => {
                  return (
                    <View style={styles.goalItems}>
                      <Text style={styles.goalText}>{`${(index =
                        itemData.index + 1)}.${itemData.item}`}</Text>
                    </View>
                  );
                }}
                scrollPerfTag="MyScrollView"
              ></FlatList>
            </View>
          </View>
        </View>
      </SafeAreaView>
    </SafeAreaProvider>
  );
};

export default App;

const styles = StyleSheet.create({
  appContainer: {
    paddingHorizontal: 20,
  },
  container: {
    flex: 1,
    paddingTop: 30,
  },
  inputContainer: {
    flexDirection: "row",
    justifyContent: "space-around",
    borderColor: "#A888B5",
    alignItems: "center",
    paddingBottom: 30,
    borderBottomWidth: 1,
  },
  TextInput: {
    padding: 10,
    paddingRight: 20,
    borderWidth: 1,
    width: "70%",
    marginRight: "10",
    borderRadius: 5,
  },
  goalContainer: {
    paddingTop: "30",
  },
  goalItems: {
    marginHorizontal: 20,
    margin: 5,
    padding: 10,
    backgroundColor: "#A888B5",
    color: "white",
    fontWeight: 800,
    fontSize: 18,
    borderRadius: 5,
  },
  goalText: {
    color: "white",
    fontWeight: 800,
    fontSize: 18,
  },
});


----------------------------------------------------------------------------------------------------
import React from "react";
import { View, Text, ScrollView, StyleSheet, FlatList } from "react-native";
import { Card } from "react-native-paper";
import { SafeAreaProvider, SafeAreaView } from "react-native-safe-area-context";

const App = () => {
  // Dummy data
  const stats = [
    { id: "1", title: "Total Users", value: 1250 },
    { id: "2", title: "Active Sessions", value: 320 },
    { id: "3", title: "Revenue", value: "$12,500" },
  ];

  const activities = [
    { id: "1", activity: "User John Doe signed up." },
    { id: "2", activity: "New payment of $145 received." },
    { id: "3", activity: "Session timeout for User Jane." },
    { id: "4", activity: "Admin added a new announcement." },
    { id: "5", activity: "Password reset request for User Alex." },
    { id: "6", activity: "User Emily updated her profile." },
    { id: "7", activity: "Subscription renewed by User Mike." },
    { id: "8", activity: "User Sam posted a new comment." },

    { id: "9", activity: "New order placed by User Chloe." },
    { id: "10", activity: "Admin deleted an old announcement." },
    { id: "11", activity: "Session timeout for User Jane." },
    { id: "12", activity: "New payment of $320 received." },
    { id: "13", activity: "User John Doe signed up." },
    { id: "14", activity: "User Emily updated her profile." },
    { id: "15", activity: "Admin added a new announcement." },
    { id: "16", activity: "Password reset request for User Alex." },

    { id: "17", activity: "Subscription renewed by User Mike." },
    { id: "18", activity: "User Sam posted a new comment." },
    { id: "19", activity: "Admin deleted an old announcement." },
    { id: "20", activity: "Session timeout for User Jane." },
    { id: "21", activity: "New payment of $215 received." },
    { id: "22", activity: "User John Doe signed up." },
    { id: "23", activity: "New order placed by User Chloe." },
    { id: "24", activity: "User Emily updated her profile." },

    { id: "25", activity: "Admin added a new announcement." },
    { id: "26", activity: "Password reset request for User Alex." },
    { id: "27", activity: "Subscription renewed by User Mike." },
    { id: "28", activity: "User Sam posted a new comment." },
    { id: "29", activity: "New payment of $180 received." },
    { id: "30", activity: "Admin deleted an old announcement." },
    { id: "31", activity: "Session timeout for User Jane." },
    { id: "32", activity: "User John Doe signed up." },

    { id: "33", activity: "User Emily updated her profile." },
    { id: "34", activity: "Subscription renewed by User Mike." },
    { id: "35", activity: "New order placed by User Chloe." },
    { id: "36", activity: "Admin added a new announcement." },
    { id: "37", activity: "Password reset request for User Alex." },
    { id: "38", activity: "User Sam posted a new comment." },
    { id: "39", activity: "Session timeout for User Jane." },
    { id: "40", activity: "New payment of $275 received." },
  ];

  return (
    <SafeAreaProvider>
      <SafeAreaView style={styles.container}>
        <ScrollView style={styles.ScrollContainer}>
          <Text style={styles.header}>Dashboard</Text>
          {/* Stats Section */}
          <View style={styles.statsContainer}>
            {stats.map((stat) => (
              <Card style={styles.card} key={stat.id}>
                <Text style={styles.cardTitle}>{stat.title}</Text>
                <Text style={styles.cardValue}>{stat.value}</Text>
              </Card>
            ))}
          </View>

          {/* Recent Activities Section */}
          <View style={styles.activitiesContainer}>
            <Text style={styles.subHeader}>Recent Activities</Text>
            <FlatList
              data={activities}
              keyExtractor={(item) => item.id}
              renderItem={({ item }) => (
                <View style={styles.activityItem}>
                  <Text>{item.activity}</Text>
                </View>
              )}
            />
          </View>
        </ScrollView>
      </SafeAreaView>
    </SafeAreaProvider>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 30,
  },
  ScrollContainer: {
    flex: 1,
    backgroundColor: "#f4f4f4",
    padding: 16,
  },
  header: {
    fontSize: 24,
    fontWeight: "800",
    color: "#EFB036",
    marginBottom: 16,
  },
  statsContainer: {
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "space-between",
    marginBottom: 24,
  },
  card: {
    flex: 1,
    marginHorizontal: 8,
    padding: 16,
    borderRadius: 8,
    elevation: 2,
    backgroundColor: "#fff",
  },
  cardTitle: {
    fontSize: 16,
    color: "#4C7B8B",
    fontWeight: "800",
    marginBottom: 8,
  },
  cardValue: {
    fontSize: 20,
    fontWeight: "bold",
  },
  activitiesContainer: {
    marginTop: 16,
  },
  subHeader: {
    fontSize: 20,
    fontWeight: "600",
    marginBottom: 8,
  },
  activityItem: {
    padding: 12,
    backgroundColor: "#fff",
    borderRadius: 8,
    marginBottom: 8,
    elevation: 1,
  },
});

export default App;

------------------------------------------------------------------------------------------------------------------------
DAY 4

import React, { useState } from "react";
import GoalItems from "./components/GoalItems";
import {
  StyleSheet,
  Text,
  View,
  FlatList,
  Button,
  TouchableOpacity,
} from "react-native";
import { SafeAreaProvider, SafeAreaView } from "react-native-safe-area-context";
import GoalInput from "./components/GoalInput";

const App = () => {
  const [listDatas, setListData] = useState([]);
  const [modelIsVisible, setModelIsVisible] = useState(false);

  function ModelClicker() {
    setModelIsVisible(true);
    console.log("model click");
  }
  // list showing
  function addGoalHandler(enterGoalsText) {
    setListData((currentListData) => [
      ...currentListData,
      { text: enterGoalsText, id: Math.random().toString() },
    ]);
    cancelGoalHandler();
  }
  function cancelGoalHandler() {
    setModelIsVisible(false);
    console.log("can");
  }

  function deleteGoalHandle(id) {
    setListData((currentListData) => {
      return currentListData.filter((goal) => goal.id !== id);
    });
  }
  return (
    <SafeAreaProvider>
      <SafeAreaView style={styles.container}>
        <View style={styles.appContainer}>
          <Text
            style={{
              fontSize: 35,
              margin: "auto",
              paddingBottom: 50,
              fontWeight: "900",
              color: "#323232",
            }}
          >
            TRACK YOUR GOALS
          </Text>
          {/* <Button title="Add the Goals" color="#041949" onPress={ModelClicker} /> */}
          <TouchableOpacity style={styles.button} onPress={ModelClicker}>
            <Text style={styles.buttonText}>Add New Goals</Text>
          </TouchableOpacity>
          {modelIsVisible && (
            <GoalInput
              onAddGoal={addGoalHandler}
              visible={modelIsVisible}
              onCancel={cancelGoalHandler}
            />
          )}
          <View style={styles.goalContainer}>
            {/* using flat list the alternative of scrollview and map() function key pair  */}
            <FlatList
              data={listDatas}
              renderItem={(itemData) => {
                return (
                  <GoalItems
                    text={itemData.item.text}
                    id={itemData.item.id}
                    onDeleteItem={deleteGoalHandle}
                  />
                );
              }}
              keyExtractor={(item) => {
                return item.id;
              }}
              alwaysBounceVertical={true}
            />
          </View>
        </View>
      </SafeAreaView>
    </SafeAreaProvider>
  );
};

export default App;

const styles = StyleSheet.create({
  appContainer: {
    paddingHorizontal: 20,
  },
  container: {
    flex: 1,
    paddingTop: 30,
  },
  goalContainer: {
    paddingTop: "30",
  },
  buttonText: {
    color: "white",
    padding: 20,
    width: 200,
    margin: "auto",
    borderRadius: 10,
    fontSize: 16,
    backgroundColor: "#041949",
    fontWeight: "bold",
    textAlign: "center",
  },
});




---->
import {
  StyleSheet,
  View,
  TextInput,
  Text,
  Modal,
  TouchableOpacity,
} from "react-native";
import React from "react";
import { useState } from "react";

const GoalInput = (props) => {
  const [enterGoalsText, setEnterGoalText] = useState("");

  function handleChange(enterText) {
    setEnterGoalText(enterText);
    console.log(enterText);
  }
  function addGoalHandler() {
    props.onAddGoal(enterGoalsText);
    setEnterGoalText("");
    console.log("add task");
  }
  return (
    <Modal visible={props.visible} animationType="slide">
      <View style={styles.modelContainer}>
        <View style={styles.inputContainer}>
          <TextInput
            placeholder="Your Goals Enter Here !"
            style={styles.TextInput}
            onChangeText={handleChange}
          />
        </View>
        <View style={styles.buttonContainer}>
          {/* <Button title="Add Goal" color={"#041949"} onPress={addGoalHandler} /> */}
          <TouchableOpacity style={styles.button} onPress={addGoalHandler}>
            <Text style={styles.buttonText}>Add Goals</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.button} onPress={props.onCancel}>
            <Text style={styles.buttonText}>Cancel</Text>
          </TouchableOpacity>
        </View>
      </View>
    </Modal>
  );
};

export default GoalInput;

const styles = StyleSheet.create({
  modelContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  inputContainer: {
    justifyContent: "center",
    marginBottom: 24,
    width: 400,
    alignItems: "center",
    marginBottom: 5,
  },
  TextInput: {
    paddingVertical: 15,
    paddingHorizontal: 30,
    borderColor: "black",
    fontSize: 16,
    borderWidth: 1,
    width: "70%",
    marginRight: 8,
    borderRadius: 5,
    marginBottom: 20,
  },
  buttonContainer: {
    marginTop: 10,
    gap: 20,
    flexDirection: "row",
  },
  buttonText: {
    color: 'white',
    paddingVertical : 10,
    paddingHorizontal : 18,
    borderRadius : 10,
    fontSize: 16,
    backgroundColor : "#041949",
    fontWeight: 'bold',
    textAlign: 'center',
  },
});



------->
import React from "react";
import { StyleSheet, View, Text, Pressable } from "react-native";

function GoalItems(props) {
  return (
    <View style={styles.goalItems}>
      <Pressable
        android_ripple={{ color: "#051d56" }}
        style={({ pressed }) => pressed && styles.pressedItem}
        onPress={props.onDeleteItem.bind(this, props.id)}
      >
        <Text style={styles.goalText}>{props.text}</Text>
      </Pressable>
    </View>
  );
}

export default GoalItems;

const styles = StyleSheet.create({
  goalItems: {
    marginHorizontal: 20,
    margin: 5,
    padding: 10,
    backgroundColor: "#f4f4f4",
    color: "#323232",
    fontWeight: 800,
    fontSize: 16,
    borderRadius: 10,
  },
  goalText: {
    color: "#323232",
    fontWeight: 800,
    fontSize: 16,
  },
  pressedItem: {
    opacity: 0.5,
  },
});
